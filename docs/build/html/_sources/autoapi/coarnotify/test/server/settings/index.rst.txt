coarnotify.test.server.settings
===============================

.. py:module:: coarnotify.test.server.settings


Attributes
----------

.. autoapisummary::

   coarnotify.test.server.settings.DEBUG
   coarnotify.test.server.settings.DEBUG_PYCHARM
   coarnotify.test.server.settings.DEBUG_PYCHARM_PORT
   coarnotify.test.server.settings.DEBUG_PYCHARM_SERVER
   coarnotify.test.server.settings.HOST
   coarnotify.test.server.settings.PORT
   coarnotify.test.server.settings.RESPONSE_STATUS
   coarnotify.test.server.settings.STORE_DIR
   coarnotify.test.server.settings.VALIDATE_INCOMING


Module Contents
---------------

.. py:data:: DEBUG
   :value: True


   Put flask into debug mode for developer convenience


.. py:data:: DEBUG_PYCHARM
   :value: False


   Put the app into PyCharm debug mode.  This turns off ``DEBUG`` and starts the PyCharm debugger.  You can set this here, or you can start the test server with the ``-d`` option


.. py:data:: DEBUG_PYCHARM_PORT
   :value: 6000


   The port to connect to for PyCharm debugging


.. py:data:: DEBUG_PYCHARM_SERVER
   :value: 'localhost'


   The host to connect to for PyCharm debugging


.. py:data:: HOST
   :value: 'localhost'


   Host where the app will run


.. py:data:: PORT
   :value: 5005


   Port to start the app on


.. py:data:: RESPONSE_STATUS
   :value: 201


   HTTP Response to provide to any incoming reqeusts.  201 and 202 are the specification compliant values


.. py:data:: STORE_DIR
   :value: '/your/store/dir'


   The directory on the local machine to use to store incoming JSON files


.. py:data:: VALIDATE_INCOMING
   :value: True


   Should the server attempt to validate the incoming notifications


