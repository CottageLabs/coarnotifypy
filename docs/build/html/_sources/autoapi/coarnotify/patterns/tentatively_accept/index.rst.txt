coarnotify.patterns.tentatively_accept
======================================

.. py:module:: coarnotify.patterns.tentatively_accept

.. autoapi-nested-parse::

   Pattern to represent a Tentative Accept notification
   https://coar-notify.net/specification/1.0.0/tentative-accept/



Classes
-------

.. autoapisummary::

   coarnotify.patterns.tentatively_accept.TentativelyAccept


Module Contents
---------------

.. py:class:: TentativelyAccept(stream: Union[coarnotify.core.activitystreams2.ActivityStream, dict] = None, validate_stream_on_construct=True, validate_properties=True, validators=None, validation_context=None, properties_by_reference=True)

   Bases: :py:obj:`coarnotify.core.notify.NestedPatternObjectMixin`, :py:obj:`coarnotify.core.notify.NotifyPattern`, :py:obj:`coarnotify.core.notify.SummaryMixin`


   Class to represent a Tentative Accept notification


   .. py:method:: validate() -> bool

      In addition to the base validation apply the following constraints:

      * The ``inReplyTo`` property is required
      * The ``inReplyTo`` value must match the ``object.id`` value

      :return:



   .. py:attribute:: TYPE

      Tentative Accept type, the ActivityStreams Tentative Accept type



